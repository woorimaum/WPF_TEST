<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- MainWindow TitleBar Buttons -->
    <Style x:Key="TitleBarButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{x:Static SystemColors.WindowTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center"   x:Name="CP"
                                          VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter TargetName="contentPath"
                                    Property="Fill"
                                    Value="{DynamicResource DefaultMainWinTitleButton}" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Foreground"
                                    Value="Gray" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="contentPath"
                                    Property="Fill"
                                    Value="{DynamicResource DefaultMainWinTitleButtonPress}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{x:Static SystemColors.WindowTextBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter TargetName="contentPath"
                                    Property="Fill"
                                    Value="{DynamicResource DefaultMainWinTitleButton}" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="Red" />
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <!--<Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="contentPath"
                                    Property="Fill"
                                    Value="{DynamicResource DefaultMainWinTitleButtonPress}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- ====== Tunables ====== -->
    

    <!-- 공용 브러시들 - 현실적인 글래스모피즘 -->
    <!-- 메인 글래스 배경 (매우 부드러운 그라데이션) -->
    <LinearGradientBrush x:Key="GlassFillBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#40FFFFFF" Offset="0.0"/>
        <GradientStop Color="#30FFFFFF" Offset="0.2"/>
        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
        <GradientStop Color="#15FFFFFF" Offset="0.8"/>
        <GradientStop Color="#10FFFFFF" Offset="1.0"/>
    </LinearGradientBrush>

    <!-- 배경 틴트 (매우 미묘한) -->
    <SolidColorBrush x:Key="GlassTintBrush"
                 Color="#E8F4F8"
                 Opacity="0.15"/>

    <!-- 상단 하이라이트 그라데이션 -->
    <LinearGradientBrush x:Key="TopHighlightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#80FFFFFF" Offset="0.0"/>
        <GradientStop Color="#40FFFFFF" Offset="0.3"/>
        <GradientStop Color="#20FFFFFF" Offset="0.6"/>
        <GradientStop Color="#00FFFFFF" Offset="1.0"/>
    </LinearGradientBrush>

    <!-- 하단 리플렉션 그라데이션 -->
    <LinearGradientBrush x:Key="BottomReflectionBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#00FFFFFF" Offset="0.0"/>
        <GradientStop Color="#10FFFFFF" Offset="0.4"/>
        <GradientStop Color="#30FFFFFF" Offset="0.8"/>
        <GradientStop Color="#50FFFFFF" Offset="1.0"/>
    </LinearGradientBrush>

    <!-- 외곽선: 매우 부드러운 베벨 -->
    <LinearGradientBrush x:Key="BevelStrokeBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#60FFFFFF" Offset="0.0"/>
        <GradientStop Color="#30FFFFFF" Offset="0.3"/>
        <GradientStop Color="#10FFFFFF" Offset="0.6"/>
        <GradientStop Color="#08000000" Offset="0.8"/>
        <GradientStop Color="#20000000" Offset="1.0"/>
    </LinearGradientBrush>

    <!-- Hover 글로우 (더 부드럽고 넓게) -->
    <DropShadowEffect x:Key="HoverGlow" BlurRadius="35" ShadowDepth="0" Opacity="0.25" Color="#C0F8FFFF"/>

    <!-- Ripple easing -->
    <QuinticEase x:Key="RippleEase" EasingMode="EaseOut"/>

    <!-- ====== Style ====== -->
    <Style x:Key="LiquidGlassButtonV2" TargetType="Button">
        <!-- CornerRadius를 외부에서 바꿔 사용(기본 20). Tag에 숫자 전달 -->
        <Setter Property="Tag" Value="20"/>
        <Setter Property="Foreground" Value="#F0FFFFFF"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="16,10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <!-- Ripple Storyboard -->
                            <Storyboard x:Key="RippleStoryboard">
                                <DoubleAnimation Storyboard.TargetName="RippleScale"
                                                 Storyboard.TargetProperty="ScaleX"
                                                 From="0.0" To="8.5" Duration="0:0:0.60">
                                    <DoubleAnimation.EasingFunction>
                                        <QuinticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="RippleScale"
                                                 Storyboard.TargetProperty="ScaleY"
                                                 From="0.0" To="8.5" Duration="0:0:0.60">
                                    <DoubleAnimation.EasingFunction>
                                        <QuinticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Ripple"
                                                 Storyboard.TargetProperty="Opacity"
                                                 From="0.38" To="0.0" Duration="0:0:0.60"/>
                            </Storyboard>
                        </Grid.Resources>

                        <!-- 1) 배경 틴트 (매우 미묘한) -->
                        <Border x:Name="Tint"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                Background="{StaticResource GlassTintBrush}"/>

                        <!-- 2) 메인 글래스 본체 (강한 블러) -->
                        <Border x:Name="Glass"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                Background="{StaticResource GlassFillBrush}"
                                BorderBrush="#10FFFFFF" BorderThickness="0.5">
                            <Border.Effect>
                                <BlurEffect Radius="12"/>
                            </Border.Effect>
                        </Border>

                        <!-- 3) 상단 하이라이트 (자연스러운 글로우) -->
                        <Border CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                Margin="1" VerticalAlignment="Top" Height="40" Opacity="0.6">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#60FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#30FFFFFF" Offset="0.2"/>
                                    <GradientStop Color="#15FFFFFF" Offset="0.4"/>
                                    <GradientStop Color="#00FFFFFF" Offset="0.6"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <BlurEffect Radius="8"/>
                            </Border.Effect>
                        </Border>

                        <!-- 4) 하단 리플렉션 (자연스러운 글로우) -->
                        <Border CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                Margin="1" VerticalAlignment="Bottom" Height="35" Opacity="0.4">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#00FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#10FFFFFF" Offset="0.3"/>
                                    <GradientStop Color="#25FFFFFF" Offset="0.7"/>
                                    <GradientStop Color="#40FFFFFF" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>

                        <!-- 5) 외곽 베벨 (매우 부드럽게) -->
                        <Border CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                BorderThickness="0.8" BorderBrush="{StaticResource BevelStrokeBrush}" Opacity="0.5"/>

                        <!-- 6) 내부 미묘한 그림자 -->
                        <Border CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                Margin="2" Opacity="0.08">
                            <Border.OpacityMask>
                                <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="1.2" RadiusY="1.2">
                                    <GradientStop Color="#FF000000" Offset="1.0"/>
                                    <GradientStop Color="#00000000" Offset="0.5"/>
                                </RadialGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <SolidColorBrush Color="#000000"/>
                            </Border.Background>
                        </Border>

                        <!-- 7) Ripple 레이어 (더 부드럽게) -->
                        <Grid ClipToBounds="True" x:Name="RippleHost" Margin="3">
                            <Ellipse x:Name="Ripple" Width="50" Height="50" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5" RadiusX="0.7" RadiusY="0.7">
                                        <GradientStop Color="#C0FFFFFF" Offset="0.0"/>
                                        <GradientStop Color="#60FFFFFF" Offset="0.4"/>
                                        <GradientStop Color="#20FFFFFF" Offset="0.7"/>
                                        <GradientStop Color="#00FFFFFF" Offset="1.0"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                                <Ellipse.Effect>
                                    <BlurEffect Radius="4"/>
                                </Ellipse.Effect>
                                <Ellipse.RenderTransform>
                                    <ScaleTransform x:Name="RippleScale" ScaleX="0" ScaleY="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>

                        <!-- 8) Content (텍스트에 미묘한 그림자) -->
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="2" ShadowDepth="0" Opacity="0.3" Color="#000000"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>

                        <!-- 9) Focus 링 (더 부드럽게) -->
                        <Border x:Name="FocusVisual"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                BorderThickness="1.2" BorderBrush="#40FFFFFF"
                                Opacity="0" IsHitTestVisible="False">
                            <Border.Effect>
                                <BlurEffect Radius="3"/>
                            </Border.Effect>
                        </Border>

                        <!-- EventTrigger -->
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard Storyboard="{StaticResource RippleStoryboard}"/>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>

                    <!-- 상태 트리거 -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Glass" Property="Effect" Value="{StaticResource HoverGlow}"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter TargetName="Glass" Property="Opacity" Value="0.8"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Glass" Property="Opacity" Value="0.9"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Opacity" Value="0.8"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#60FFFFFF"/>
                            <Setter TargetName="Tint" Property="Opacity" Value="0.1"/>
                            <Setter TargetName="Glass" Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Liquid Glass Button Style -->
    <Style x:Key="LiquidGlassButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="16,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- 반드시 Grid 내부에 Triggers/Resources 배치 -->
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <!-- Ripple 애니메이션을 Root의 Resources에 정의 -->
                        <Grid.Resources>
                            <Storyboard x:Key="RippleStoryboard">
                                <!-- Scale -->
                                <DoubleAnimation Storyboard.TargetName="Ripple"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 From="0.0" To="7.0" Duration="0:0:0.55"
                                                 EasingFunction="{StaticResource RippleEase}"/>
                                <DoubleAnimation Storyboard.TargetName="Ripple"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 From="0.0" To="7.0" Duration="0:0:0.55"
                                                 EasingFunction="{StaticResource RippleEase}"/>
                                <!-- Opacity -->
                                <DoubleAnimation Storyboard.TargetName="Ripple"
                                                 Storyboard.TargetProperty="Opacity"
                                                 From="0.35" To="0.0" Duration="0:0:0.55"/>
                            </Storyboard>
                        </Grid.Resources>

                        <!-- Glass base -->
                        <Border x:Name="GlassBase"
                                CornerRadius="18"
                                Background="#55FFFFFF"
                                BorderBrush="#70FFFFFF"
                                BorderThickness="1.5">
                            <Border.Effect>
                                <BlurEffect Radius="6"/>
                            </Border.Effect>
                        </Border>

                        <!-- Inner glow -->
                        <Border CornerRadius="18" Margin="1.5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#66FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#22FFFFFF" Offset="0.45"/>
                                    <GradientStop Color="#10FFFFFF" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <!-- Top glossy strip -->
                        <Border CornerRadius="18" Margin="2" VerticalAlignment="Top" Height="22" Opacity="0.8">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#90FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <!-- Ripple layer (center-origin) -->
                        <Grid ClipToBounds="True" Margin="2" x:Name="RippleHost">
                            <Ellipse x:Name="Ripple"
                                     Width="40" Height="40"
                                     Opacity="0"
                                     Fill="#80FFFFFF"
                                     RenderTransformOrigin="0.5,0.5">
                                <Ellipse.Effect>
                                    <BlurEffect Radius="2"/>
                                </Ellipse.Effect>
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="0.0" ScaleY="0.0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>

                        <!-- Content -->
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>

                        <!-- Focus ring -->
                        <Border x:Name="FocusVisual"
                                CornerRadius="18"
                                BorderThickness="1.5"
                                BorderBrush="#40FFFFFF"
                                Opacity="0"
                                IsHitTestVisible="False"/>

                        <!-- 여기! Grid 내부에 EventTrigger -->
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard Storyboard="{StaticResource RippleStoryboard}"/>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>

                    <!-- ControlTemplate Triggers -->
                    <ControlTemplate.Triggers>
                        <!-- Hover: glow -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="GlassBase" Property="BorderBrush" Value="#A0FFFFFF"/>
                            <Setter TargetName="GlassBase" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="12" ShadowDepth="0" Opacity="0.25"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="#FF00BFFF"/>
                        </Trigger>

                        <!-- Pressed: scale down -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Focus ring -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ====== 다양한 모양의 리퀴드 글라스 버튼 스타일들 ====== -->
    
    <!-- 원형 버튼 스타일 -->
    <Style x:Key="LiquidGlassCircleButton" TargetType="Button" BasedOn="{StaticResource LiquidGlassButtonV2}">
        <Setter Property="Tag" Value="50"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
    </Style>

    <!-- 둥근 사각형 버튼 스타일 -->
    <Style x:Key="LiquidGlassRoundedButton" TargetType="Button" BasedOn="{StaticResource LiquidGlassButtonV2}">
        <Setter Property="Tag" Value="25"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="40"/>
    </Style>

    <!-- 슬라이더/트랙 스타일 -->
    <Style x:Key="LiquidGlassSliderTrack" TargetType="Button">
        <Setter Property="Tag" Value="50"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Foreground" Value="#F0FFFFFF"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <!-- 슬라이더 트랙 배경 -->
                        <Border x:Name="TrackBackground"
                                CornerRadius="50"
                                Background="{StaticResource GlassTintBrush}"/>
                        
                        <!-- 슬라이더 트랙 글래스 -->
                        <Border x:Name="TrackGlass"
                                CornerRadius="50"
                                Background="{StaticResource GlassFillBrush}"
                                BorderBrush="#15FFFFFF" BorderThickness="0.8">
                            <Border.Effect>
                                <BlurEffect Radius="6"/>
                            </Border.Effect>
                        </Border>

                        <!-- 슬라이더 썸 (오른쪽에 위치) -->
                        <Border x:Name="SliderThumb"
                                CornerRadius="50"
                                Width="24" Height="24"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="0,0,8,0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#80FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#40FFFFFF" Offset="0.5"/>
                                    <GradientStop Color="#20FFFFFF" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#60FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                    <GradientStop Color="#10000000" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.BorderThickness>0.8</Border.BorderThickness>
                            <Border.Effect>
                                <BlurEffect Radius="4"/>
                            </Border.Effect>
                        </Border>

                        <!-- 썸 하단 글로우 -->
                        <Ellipse VerticalAlignment="Bottom" Width="20" Height="20" 
                                HorizontalAlignment="Right" Margin="0,0,10,2" Opacity="0.4">
                            <Ellipse.Fill>
                                <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="0.8" RadiusY="1.0">
                                    <GradientStop Color="#60FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#20FFFFFF" Offset="0.6"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1.0"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.Effect>
                                <BlurEffect Radius="6"/>
                            </Ellipse.Effect>
                        </Ellipse>

                        <!-- Content -->
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TrackGlass" Property="Effect" Value="{StaticResource HoverGlow}"/>
                            <Setter Property="Foreground" Value="#FF7FD9FF"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 액티브 상태 버튼 (더 밝은 글로우) -->
    <Style x:Key="LiquidGlassActiveButton" TargetType="Button" BasedOn="{StaticResource LiquidGlassButtonV2}">
        <Setter Property="Tag" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="30" ShadowDepth="0" Opacity="0.5" Color="#C0F0F8FF"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#FFB0E8FF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Book a Call 스타일 (사진과 동일한 느낌) -->
    <Style x:Key="BookCallButtonStyle" TargetType="Button">
        <Setter Property="Tag" Value="25"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="24,12"/>
        <Setter Property="MinWidth" Value="140"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <!-- 배경 틴트 (매우 미묘한) -->
                        <Border x:Name="Tint"
                                CornerRadius="25"
                                Background="#0DFFFFFF"/>

                        <!-- 메인 글래스 (강한 블러) -->
                        <Border x:Name="Glass"
                                CornerRadius="25"
                                Background="#20FFFFFF"
                                BorderBrush="#08FFFFFF" BorderThickness="0.5">
                            <Border.Effect>
                                <BlurEffect Radius="15"/>
                            </Border.Effect>
                        </Border>

                        <!-- 상단 하이라이트 -->
                        <Border CornerRadius="25"
                                Margin="1" VerticalAlignment="Top" Height="45" Opacity="0.5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#50FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#25FFFFFF" Offset="0.2"/>
                                    <GradientStop Color="#10FFFFFF" Offset="0.4"/>
                                    <GradientStop Color="#00FFFFFF" Offset="0.6"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>

                        <!-- 하단 리플렉션 -->
                        <Border CornerRadius="25"
                                Margin="1" VerticalAlignment="Bottom" Height="40" Opacity="0.3">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#00FFFFFF" Offset="0.0"/>
                                    <GradientStop Color="#08FFFFFF" Offset="0.3"/>
                                    <GradientStop Color="#20FFFFFF" Offset="0.7"/>
                                    <GradientStop Color="#35FFFFFF" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <BlurEffect Radius="12"/>
                            </Border.Effect>
                        </Border>

                        <!-- 외곽 베벨 -->
                        <Border CornerRadius="25"
                                BorderThickness="0.6" BorderBrush="#15FFFFFF" Opacity="0.4"/>

                        <!-- Content (텍스트 그림자) -->
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="3" ShadowDepth="0" Opacity="0.4" Color="#000000"/>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Glass" Property="Opacity" Value="0.7"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Glass" Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>  